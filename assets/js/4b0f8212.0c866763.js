"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9161],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=u(r),d=a,g=s["".concat(c,".").concat(d)]||s[d]||m[d]||l;return r?n.createElement(g,i(i({ref:t},p),{},{components:r})):n.createElement(g,i({ref:t},p))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[s]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},8178:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>u});var n=r(87462),a=(r(67294),r(3905));r(8209);const l={id:"regex",title:"Regex module",sidebar_label:"Regex"},i=void 0,o={unversionedId:"build/smart-contracts/language/library/regex",id:"build/smart-contracts/language/library/regex",title:"Regex module",description:"The Regex module contains functions to extract data from strings via Regular Expressions.",source:"@site/docs/build/smart-contracts/language/library/regex.md",sourceDirName:"build/smart-contracts/language/library",slug:"/build/smart-contracts/language/library/regex",permalink:"/build/smart-contracts/language/library/regex",draft:!1,tags:[],version:"current",lastUpdatedAt:1715802064,formattedLastUpdatedAt:"May 15, 2024",frontMatter:{id:"regex",title:"Regex module",sidebar_label:"Regex"},sidebar:"docs",previous:{title:"Math",permalink:"/build/smart-contracts/language/library/math"},next:{title:"State",permalink:"/build/smart-contracts/language/library/state"}},c={},u=[{value:"extract/2",id:"extract2",level:3},{value:"match?/2",id:"match2",level:3},{value:"scan/2",id:"scan2",level:3}],p={toc:u},s="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(s,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Regex")," module contains functions to extract data from strings via Regular Expressions."),(0,a.kt)("h3",{id:"extract2"},"extract/2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},'Regex.extract("123456abc", "[0-9]+")    # "123456"\nRegex.extract("voodoo", "[abc]")        # ""\n')),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"text")," the list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pattern")," the element")),(0,a.kt)("p",null,"Returns the data from ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," extract via the regex ",(0,a.kt)("inlineCode",{parentName:"p"},"pattern"),"."),(0,a.kt)("h3",{id:"match2"},"match?/2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},'Regex.match?("123456", "^[0-9]+$")      # true\nRegex.match?("123456abc", "^[0-9]+$")   # false\n')),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"text")," the list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pattern")," the element")),(0,a.kt)("p",null,"Returns whether the ",(0,a.kt)("inlineCode",{parentName:"p"},"pattern")," matches the ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," or not."),(0,a.kt)("h3",{id:"scan2"},"scan/2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},'Regex.scan("foo", "bar")                                    # []\nRegex.scan("toto,123\\ntutu,456\\n", "toto,([0-9]+)")         # ["123"]\nRegex.scan("toto,123\\ntutu,456\\n", "t.t.,([0-9]+)")         # ["123", "456"]\nRegex.scan("A0B1C2,123\\nD3E4F5,456\\n", "^(\\\\w+),(\\\\d+)$")   # [["A0B1C2", "123"], ["D3E4F5", "456"]]\n\n')),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"text")," the list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"pattern")," the element")),(0,a.kt)("p",null,"Returns the data from ",(0,a.kt)("inlineCode",{parentName:"p"},"text")," extract via the regex ",(0,a.kt)("inlineCode",{parentName:"p"},"pattern"),"."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This function requires the usage of capture groups (subexpressions).")))}m.isMDXComponent=!0},8209:(e,t,r)=>{r(67294)}}]);