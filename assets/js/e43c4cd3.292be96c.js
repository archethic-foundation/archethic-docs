"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2034],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>c});var l=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=l.createContext({}),o=function(e){var t=l.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=o(e.components);return l.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},k=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=o(n),k=a,c=d["".concat(p,".").concat(k)]||d[k]||m[k]||i;return n?l.createElement(c,r(r({ref:t},u),{},{components:n})):l.createElement(c,r({ref:t},u))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=k;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[d]="string"==typeof e?e:a,r[1]=s;for(var o=2;o<i;o++)r[o]=n[o];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}k.displayName="MDXCreateElement"},60097:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var l=n(87462),a=(n(67294),n(3905));n(8209);const i={id:"list",title:"List module",sidebar_label:"List"},r=void 0,s={unversionedId:"build/smart-contracts/language/library/list",id:"build/smart-contracts/language/library/list",title:"List module",description:"The List module contains functions to deal with lists. Lists are actually Linked List.",source:"@site/docs/build/smart-contracts/language/library/list.md",sourceDirName:"build/smart-contracts/language/library",slug:"/build/smart-contracts/language/library/list",permalink:"/build/smart-contracts/language/library/list",draft:!1,tags:[],version:"current",lastUpdatedAt:1732562836,formattedLastUpdatedAt:"Nov 25, 2024",frontMatter:{id:"list",title:"List module",sidebar_label:"List"},sidebar:"docs",previous:{title:"Json",permalink:"/build/smart-contracts/language/library/json"},next:{title:"Map",permalink:"/build/smart-contracts/language/library/map"}},p={},o=[{value:"at/2",id:"at2",level:3},{value:"size/1",id:"size1",level:3},{value:"in?/2",id:"in2",level:3},{value:"empty?/1",id:"empty1",level:3},{value:"concat/2",id:"concat2",level:3},{value:"append/2",id:"append2",level:3},{value:"prepend/2",id:"prepend2",level:3},{value:"join/2",id:"join2",level:3},{value:"sort/1",id:"sort1",level:3},{value:"sort_by/2",id:"sort_by2",level:3},{value:"uniq/1",id:"uniq1",level:3},{value:"reverse/1",id:"reverse1",level:3},{value:"set_at/3",id:"set_at3",level:3},{value:"delete_at/3",id:"delete_at3",level:3}],u={toc:o},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,l.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"List")," module contains functions to deal with lists. Lists are actually ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Linked_list"},"Linked List"),"."),(0,a.kt)("h3",{id:"at2"},"at/2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},'List.at(["a", "b", "c"], 0)     # "a"\nList.at(["a", "b", "c"], 1)     # "b"\nList.at(["a", "b", "c"], 2)     # "c"\nList.at([], 0)                  # nil\n')),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"index")," the index (zero-based)")),(0,a.kt)("p",null,"Returns the element at ",(0,a.kt)("inlineCode",{parentName:"p"},"index")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"list"),"."),(0,a.kt)("h3",{id:"size1"},"size/1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},"List.size([])           # 0\nList.size([1,2,3,4])    # 4\n")),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list")),(0,a.kt)("p",null,"Returns the number of keys in ",(0,a.kt)("inlineCode",{parentName:"p"},"list"),"."),(0,a.kt)("h3",{id:"in2"},"in?/2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},'List.in?(["bob", "alice"], "alice") # true\nList.in?(["bob", "alice"], "fred")  # false\n')),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the haystack"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"element")," the needle")),(0,a.kt)("p",null,"Returns whether the ",(0,a.kt)("inlineCode",{parentName:"p"},"needle")," is in the ",(0,a.kt)("inlineCode",{parentName:"p"},"haystack"),"."),(0,a.kt)("h3",{id:"empty1"},"empty?/1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},'List.empty?([])         # true\nList.empty?(["apple"])  # false\n')),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list")),(0,a.kt)("p",null,"Returns whether the ",(0,a.kt)("inlineCode",{parentName:"p"},"list")," is empty or not."),(0,a.kt)("h3",{id:"concat2"},"concat/2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},"List.concat([], [])         # []\nList.concat([1,2], [3,4])   # [1,2,3,4]\n")),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list1")," a list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list2")," another list")),(0,a.kt)("p",null,"Returns a new list where ",(0,a.kt)("inlineCode",{parentName:"p"},"list2")," is concatenated to ",(0,a.kt)("inlineCode",{parentName:"p"},"list1"),"."),(0,a.kt)("h3",{id:"append2"},"append/2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},"List.append([], 1)    # [1]\nList.append([1], 2)   # [1,2]\n")),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"element")," the element")),(0,a.kt)("p",null,"Returns a new list where ",(0,a.kt)("inlineCode",{parentName:"p"},"element")," is appended to the end of ",(0,a.kt)("inlineCode",{parentName:"p"},"list"),"."),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"If order doesn't matter, we suggest to use ",(0,a.kt)("inlineCode",{parentName:"p"},"prepend/2")," instead (Complexity: O(1) instead of O(n)).")),(0,a.kt)("h3",{id:"prepend2"},"prepend/2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},"List.prepend([], 1)    # [1]\nList.prepend([1], 0)   # [0,1]\n")),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"element")," the element")),(0,a.kt)("p",null,"Returns a new list where ",(0,a.kt)("inlineCode",{parentName:"p"},"element")," is appended to the start of ",(0,a.kt)("inlineCode",{parentName:"p"},"list"),"."),(0,a.kt)("h3",{id:"join2"},"join/2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},'List.join([], ", ")    # ""\nList.join(["Mike", "Robert", "Joe"], ", ")   # "Mike, Robert, Joe"\n')),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list of strings"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"separator")," the separator")),(0,a.kt)("p",null,"Returns a string where all ",(0,a.kt)("inlineCode",{parentName:"p"},"list"),"'s elements have been joined with ",(0,a.kt)("inlineCode",{parentName:"p"},"separator")," separator."),(0,a.kt)("h3",{id:"sort1"},"sort/1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},"List.sort([1,3,2])    # [1,2,3]\n")),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list of maps")),(0,a.kt)("p",null,"Returns same ",(0,a.kt)("inlineCode",{parentName:"p"},"list")," but ordered ASC."),(0,a.kt)("h3",{id:"sort_by2"},"sort_by/2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},'List.sort_by([[a: 1], [a: 3], [a: 2]], "a")    # [[a: 1], [a: 2], [a: 3]]\n')),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list of maps"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"field")," the field of the map to use for sorting")),(0,a.kt)("p",null,"Returns same ",(0,a.kt)("inlineCode",{parentName:"p"},"list")," but ordered ASC by the ",(0,a.kt)("inlineCode",{parentName:"p"},"field")," value of each items."),(0,a.kt)("h3",{id:"uniq1"},"uniq/1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},"List.uniq([1,2,1,2,3])    # [1,2,3]\n")),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list")),(0,a.kt)("p",null,"Returns same ",(0,a.kt)("inlineCode",{parentName:"p"},"list")," but without duplicated elements."),(0,a.kt)("h3",{id:"reverse1"},"reverse/1"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},"List.reverse([1,2,2,3])    # [3,2,2,1]\n")),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list")),(0,a.kt)("p",null,"Returns same ",(0,a.kt)("inlineCode",{parentName:"p"},"list")," but reversed."),(0,a.kt)("h3",{id:"set_at3"},"set_at/3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},'List.set_at(["index0", "index1"], 1, "value")    # ["index0", "value"]\n')),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"index")," 0-based index"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"value")," the value to set at index")),(0,a.kt)("p",null,"Returns same ",(0,a.kt)("inlineCode",{parentName:"p"},"list")," but element at index ",(0,a.kt)("inlineCode",{parentName:"p"},"index")," is replaced by ",(0,a.kt)("inlineCode",{parentName:"p"},"value"),"."),(0,a.kt)("h3",{id:"delete_at3"},"delete_at/3"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-elixir"},'List.delete_at(["index0", "index1"], 1)    # ["index0"]\n')),(0,a.kt)("p",null,"Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"list")," the list"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"index")," 0-based index")),(0,a.kt)("p",null,"Returns same ",(0,a.kt)("inlineCode",{parentName:"p"},"list")," but element at index ",(0,a.kt)("inlineCode",{parentName:"p"},"index")," is deleted."))}m.isMDXComponent=!0},8209:(e,t,n)=>{n(67294)}}]);