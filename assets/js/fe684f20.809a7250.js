"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5412],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>b});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=c(a),u=r,b=p["".concat(l,".").concat(u)]||p[u]||m[u]||s;return a?n.createElement(b,o(o({ref:t},d),{},{components:a})):n.createElement(b,o({ref:t},d))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<s;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},31040:(e,t,a)=>{a.r(t),a.d(t,{Badge:()=>m,Bullet:()=>d,Details:()=>b,SpecifiedBy:()=>p,assets:()=>c,contentTitle:()=>i,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=a(87462),r=a(67294),s=a(3905);a(8209);const o={id:"string",title:"String",hide_table_of_contents:!1},i=void 0,l={unversionedId:"build/api/schema/scalars/string",id:"build/api/schema/scalars/string",title:"String",description:"The String scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",source:"@site/docs/build/api/schema/scalars/string.mdx",sourceDirName:"build/api/schema/scalars",slug:"/build/api/schema/scalars/string",permalink:"/build/api/schema/scalars/string",draft:!1,tags:[],version:"current",lastUpdatedAt:1736177396,formattedLastUpdatedAt:"Jan 6, 2025",frontMatter:{id:"string",title:"String",hide_table_of_contents:!1},sidebar:"docs",previous:{title:"State",permalink:"/build/api/schema/scalars/state"},next:{title:"Timestamp",permalink:"/build/api/schema/scalars/timestamp"}},c={},d=()=>(0,s.kt)(r.Fragment,null,(0,s.kt)("span",{style:{fontWeight:"normal",fontSize:".5em",color:"var(--ifm-color-secondary-darkest)"}},"\xa0\u25cf\xa0")),p=e=>(0,s.kt)(r.Fragment,null,"Specification",(0,s.kt)("a",{className:"link",style:{fontSize:"1.5em",paddingLeft:"4px"},target:"_blank",href:e.url,title:"Specified by "+e.url},"\u2398")),m=e=>(0,s.kt)(r.Fragment,null,(0,s.kt)("span",{className:e.class},e.text)),u=[{value:"Member of",id:"member-of",level:3}],b=e=>{let{dataOpen:t,dataClose:a,children:o,startOpen:i=!1}=e;const[l,c]=(0,r.useState)(i);return(0,s.kt)("details",(0,n.Z)({},l?{open:!0}:{},{className:"details",style:{border:"none",boxShadow:"none",background:"var(--ifm-background-color)"}}),(0,s.kt)("summary",{onClick:e=>{e.preventDefault(),c((e=>!e))},style:{listStyle:"none"}},l?t:a),l&&o)},y={Bullet:d,SpecifiedBy:p,Badge:m,toc:u,Details:b},g="wrapper";function k(e){let{components:t,...a}=e;return(0,s.kt)(g,(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"String")," scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-graphql"},"scalar String\n")),(0,s.kt)("h3",{id:"member-of"},"Member of"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/consumed-inputs"},(0,s.kt)("inlineCode",{parentName:"a"},"ConsumedInputs")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/data"},(0,s.kt)("inlineCode",{parentName:"a"},"Data")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/endpoint"},(0,s.kt)("inlineCode",{parentName:"a"},"Endpoint")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/error-details"},(0,s.kt)("inlineCode",{parentName:"a"},"ErrorDetails")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/node"},(0,s.kt)("inlineCode",{parentName:"a"},"Node")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/recipient"},(0,s.kt)("inlineCode",{parentName:"a"},"Recipient")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/token"},(0,s.kt)("inlineCode",{parentName:"a"},"Token")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/transaction"},(0,s.kt)("inlineCode",{parentName:"a"},"Transaction")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/transaction-error"},(0,s.kt)("inlineCode",{parentName:"a"},"TransactionError")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/transaction-input"},(0,s.kt)("inlineCode",{parentName:"a"},"TransactionInput")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/transaction-movement"},(0,s.kt)("inlineCode",{parentName:"a"},"TransactionMovement")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/transaction-summary"},(0,s.kt)("inlineCode",{parentName:"a"},"TransactionSummary")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/unspent-output"},(0,s.kt)("inlineCode",{parentName:"a"},"UnspentOutput")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"}),(0,s.kt)(d,{mdxType:"Bullet"}),(0,s.kt)("a",{parentName:"p",href:"/build/api/schema/objects/version"},(0,s.kt)("inlineCode",{parentName:"a"},"Version")),"  ",(0,s.kt)(m,{class:"badge badge--secondary",text:"object",mdxType:"Badge"})))}k.isMDXComponent=!0},8209:(e,t,a)=>{a(67294)}}]);