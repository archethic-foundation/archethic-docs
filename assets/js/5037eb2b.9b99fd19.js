"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[246],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),m=i,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,a(a({ref:t},u),{},{components:r})):n.createElement(f,a({ref:t},u))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:i,a[1]=l;for(var s=2;s<o;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},19461:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(87462),i=(r(67294),r(3905));r(8209);const o={id:"election",title:"Election"},a=void 0,l={unversionedId:"build/core/election",id:"build/core/election",title:"Election",description:"Archethic provides rotating algorithm to elect validation and storage nodes.",source:"@site/docs/build/core/election.md",sourceDirName:"build/core",slug:"/build/core/election",permalink:"/build/core/election",draft:!1,tags:[],version:"current",lastUpdatedAt:1728283468,formattedLastUpdatedAt:"Oct 7, 2024",frontMatter:{id:"election",title:"Election"},sidebar:"docs",previous:{title:"Archethic's database",permalink:"/build/core/database"},next:{title:"CD",permalink:"/build/core/governance/code-proposals-cd"}},c={},s=[{value:"Heuristic constraints",id:"heuristic-constraints",level:2},{value:"Low-Level integrations",id:"low-level-integrations",level:2},{value:"Hypergeomtric distribution",id:"hypergeomtric-distribution",level:3}],u={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Archethic provides rotating algorithm to elect validation and storage nodes. "),(0,i.kt)("p",null,"Validation and Storage Election algorithm provides also list of heuristic constraints to fine grained elections. "),(0,i.kt)("h2",{id:"heuristic-constraints"},"Heuristic constraints"),(0,i.kt)("p",null,"An ETS table is used to store the last constraints values for a faster lookup."),(0,i.kt)("p",null,"Storage constraints are defined by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"minimum storage geographical patches"),(0,i.kt)("li",{parentName:"ul"},"minimum storage average by geographical patch"),(0,i.kt)("li",{parentName:"ul"},"number of replicast")),(0,i.kt)("p",null,"Validation constraints are defined by:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"minimum validation geographical patch distribution"),(0,i.kt)("li",{parentName:"ul"},"minimum validation nodes"),(0,i.kt)("li",{parentName:"ul"},"validation number based on a given transaction")),(0,i.kt)("h2",{id:"low-level-integrations"},"Low-Level integrations"),(0,i.kt)("p",null,"Sometimes for performance issue, we are leveraging low-level programming in C, to perform fast computation."),(0,i.kt)("h3",{id:"hypergeomtric-distribution"},"Hypergeomtric distribution"),(0,i.kt)("p",null,"For example, the Hypergeometric Distribution simulation is computed in C and wrapped in an Erlang port communication.\nBut for better simulation lookup, a cache is provided as process to hold the last value for a given number of nodes.\nIf the number of nodes changes, the hypergeometric distribution will be trigger."),(0,i.kt)("p",null,"The C program is using ",(0,i.kt)("inlineCode",{parentName:"p"},"GMP")," for big float arithemetic operations and ",(0,i.kt)("inlineCode",{parentName:"p"},"OMP")," for parallel computations to make it efficient."),(0,i.kt)("mermaid",{value:"sequenceDiagram\n    Election->>+Process: Run simulation for N nodes\n    alt with cache value\n        Process--\x3e>Election: Retrieve cached value\n    else without cache value\n        Process->>C: Run simultation\n    end\n"}))}d.isMDXComponent=!0},8209:(e,t,r)=>{r(67294)}}]);